{"version":3,"sources":["../../../src/commands/build-native/Builder.ts"],"names":["Builder","constructor","user","client","ApiV2","clientForUser","buildProject","projectDir","options","tarPath","path","join","os","tmpdir","spinner","start","checksum","presignedUrl","postAsync","type","publicUrl","uploadWithPresignedURL","succeed","job","platform","buildId","fs","remove","getLatestBuilds","getAsync","presignedPost","file","fileStream","createReadStream","form","FormData","fieldKey","fieldValue","Object","entries","fields","append","buffer","Promise","resolve","pipe","encoding","data","result","axios","post","url","headers","getHeaders","maxContentLength","Infinity","String","location","err","message","body","console","log","response"],"mappings":"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","sourcesContent":["import os from 'os';\nimport path from 'path';\n\nimport { Platform, prepareJob } from '@expo/build-tools';\nimport { ApiV2, FormData, User } from '@expo/xdl';\nimport axios from 'axios';\nimport concat from 'concat-stream';\nimport fs from 'fs-extra';\nimport md5File from 'md5-file/promise';\nimport ora from 'ora';\nimport { v4 as uuid } from 'uuid';\n\nimport { makeProjectTarball, waitForBuildEnd } from './utils';\n\nexport interface StatusResult {\n  builds: BuildInfo[];\n}\n\nexport interface Options {\n  platform: Platform;\n}\n\nexport interface BuildInfo {\n  status: string;\n  platform: Platform;\n  createdAt: string;\n  artifacts?: BuildArtifacts;\n}\n\ninterface BuildArtifacts {\n  buildUrl?: string;\n  logsUrl: string;\n}\n\ninterface PresignedPost {\n  url: string;\n  fields: object;\n}\n\nexport default class Builder {\n  client: ApiV2;\n\n  constructor(user: User) {\n    this.client = ApiV2.clientForUser(user);\n  }\n\n  async buildProject(projectDir: string, options: Options) {\n    const tarPath = path.join(os.tmpdir(), `${uuid()}.tar.gz`);\n    try {\n      await makeProjectTarball(tarPath);\n\n      const spinner = ora('Uploading project to server.').start();\n      const checksum = await md5File(tarPath);\n      const { presignedUrl } = await this.client.postAsync('upload-sessions', {\n        type: 'turtle-project-sources',\n        checksum,\n      });\n      const publicUrl = await uploadWithPresignedURL(presignedUrl, tarPath);\n      spinner.succeed('Project uploaded.');\n\n      const job = await prepareJob(options.platform, publicUrl, projectDir);\n      const { buildId } = await this.client.postAsync('builds', { job: job as any });\n\n      return await waitForBuildEnd(this.client, buildId);\n    } finally {\n      await fs.remove(tarPath);\n    }\n  }\n\n  async getLatestBuilds(): Promise<StatusResult> {\n    return await this.client.getAsync('builds');\n  }\n}\n\nasync function uploadWithPresignedURL(presignedPost: PresignedPost, file: string): Promise<string> {\n  const fileStream = fs.createReadStream(file);\n\n  const form = new FormData();\n  for (const [fieldKey, fieldValue] of Object.entries(presignedPost.fields)) {\n    form.append(fieldKey, fieldValue);\n  }\n  form.append('file', fileStream);\n\n  try {\n    const buffer = await new Promise(resolve => {\n      form.pipe(concat({ encoding: 'buffer' }, data => resolve(data)));\n    });\n    const result = await axios.post(presignedPost.url, buffer, {\n      headers: form.getHeaders(),\n      maxContentLength: Infinity,\n    });\n    return String(result.headers.location);\n  } catch (err) {\n    err.message = err.body ? `${err.message}\\n${err.body}` : err.message;\n    console.log(err.response);\n    throw err;\n  }\n}\n"],"file":"Builder.js"}